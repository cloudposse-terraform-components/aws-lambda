name: "aws-lambda"
# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-lambda"
# Short description of this project
description: |-
  This component is responsible for provisioning Lambda functions.
# Usage examples and snippets
usage: |-
  **Stack Level**: Regional

  Stack configuration for defaults:

  ```yaml
  components:
    terraform:
      lambda-defaults:
        metadata:
          type: abstract
        settings:
          spacelift:
            workspace_enabled: true
        vars:
          enabled: true
  ```

  Sample App Yaml Entry:

  ```yaml
  import:
    - catalog/lambda/defaults

  components:
    terraform:
      lambda/hello-world-py:
        metadata:
          component: lambda
          inherits:
            - lambda/defaults
        vars:
          name: hello-world-py
          function_name: main
          description: Hello Lambda from Python!
          handler: lambda.lambda_handler # in go this is the compiled binary, python it's filename.function
          memory_size: 256
          # https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html
          runtime: python3.9
          package_type: Zip # `Zip` or `Image`
          policy_json: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "ListAllBuckets",
                  "Effect": "Allow",
                  "Action": "s3:ListAllMyBuckets",
                  "Resource": "*"
                }
              ]
            }
          iam_policy:
            statements:
              - sid: AllowSQSWorkerWriteAccess
                effect: Allow
                actions:
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                resources:
                  - arn:aws:sqs:*:111111111111:worker-queue
          # Filename example
          filename: lambdas/hello-world-python/output.zip # generated by zip variable.
          zip:
            enabled: true
            input_dir: hello-world-python
            output: hello-world-python/output.zip

          # S3 Source Example
          # s3_bucket_name: lambda-source # lambda main.tf calculates the rest of the bucket_name
          # s3_key: hello-world-go.zip
  ```

  ### Notifications:

  #### SQS

  ```yaml
  sqs_notifications:
    my-service-a:
      sqs_component:
        component: sqs-queue/my-service-a
    my-service-b:
      sqs_arn: arn:aws:sqs:us-west-2:111111111111:my-service-b
  ```

  #### S3

  ```yaml
  s3_notifications:
    my-service-a:
      bucket_component:
        component: s3-bucket/my-service-a
      events: ["s3:ObjectCreated:*"]
    my-service-b:
      bucket_name: my-service-b
      events: ["s3:ObjectCreated:*", "s3:ObjectRemoved:*"]
  ```

  #### Cron (CloudWatch Event)

  ```yaml
  cloudwatch_event_rules:
    schedule-a:
      schedule_expression: "rate(5 minutes)"
    schedule-b:
      schedule_expression: "cron(0 20 * * ? *)"
  ```
# References
references:
  - name: cloudposse-terraform-components
    description: "Cloud Posse's upstream component"
    url: https://github.com/orgs/cloudposse-terraform-components/repositories
tags:
  - component/lambda
  - layer/software-delivery
  - provider/aws
# Categories of this project
categories:
  - component/lambda
  - layer/software-delivery
  - provider/aws
# License of this project
license: "APACHE2"
# Badges to display
badges:
  - name: Latest Release
    image: https://img.shields.io/github/release/cloudposse-terraform-components/aws-lambda.svg?style=for-the-badge
    url: https://github.com/cloudposse-terraform-components/aws-lambda/releases/latest
  - name: Slack Community
    image: https://slack.cloudposse.com/for-the-badge.svg
    url: https://slack.cloudposse.com
related:
  - name: "Cloud Posse Terraform Modules"
    description: Our collection of reusable Terraform modules used by our reference architectures.
    url: "https://docs.cloudposse.com/modules/"
  - name: "Atmos"
    description: "Atmos is like docker-compose but for your infrastructure"
    url: "https://atmos.tools"
contributors: [] # If included generates contribs
